/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public void reorderList(ListNode head) {
        // find mid
        ListNode fast = head;
        ListNode slow = head;
        while(fast != null && fast.next != null)
        {
            fast = fast.next.next;
            slow = slow.next; 
        }
        System.out.println("finding mid is done");

        // Split into 2 arrays
        ListNode curr = slow.next;
        slow.next = null;
         System.out.println("Split into 2 arrays is done");

        //reverse the second list
        ListNode prev = null;
        while(curr != null)
        {
            ListNode temp = curr.next;
            curr.next = prev;
            prev = curr;
            curr = temp; 
        }
        System.out.println("reverse the second list is done");

        //Combine the 2 linkedlist
        ListNode h1 = head;
        ListNode h2 = prev;
        while(h2 != null)
        {
            ListNode temp = h1.next;
            h1.next = h2;
            h1 = h2;
            h2 = temp;            
        }
        System.out.println("Combine the 2 linkedlist is done");

    }
}
